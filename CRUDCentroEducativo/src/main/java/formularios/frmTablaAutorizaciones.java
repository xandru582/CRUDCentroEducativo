/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formularios;

import com.mycompany.crudcentroeducativo.Entidades.Alumno;
import com.mycompany.crudcentroeducativo.Entidades.Autorizaciones;
import com.mycompany.crudcentroeducativo.Entidades.Autorizado;
import com.mycompany.crudcentroeducativo.controladorDAO.AlumnoDao;
import com.mycompany.crudcentroeducativo.controladorDAO.AlumnoDaoImp;
import com.mycompany.crudcentroeducativo.controladorDAO.AutorizacionesDaoImp;
import com.mycompany.crudcentroeducativo.controladorDAO.AutorizadoDaoImp;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author alejandrobalangutierrez
 */
public class frmTablaAutorizaciones extends javax.swing.JFrame {

    private DefaultTableModel modelo;

    /**
     * Creates new form frmTablaAutorizaciones
     */
    public frmTablaAutorizaciones() {
        initComponents();
        configTabla();
        cargaTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAutorizaciones = new javax.swing.JTable();
        btnAddAutorizado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtBuscar.setText("Escribe y presiona Enter para buscar");
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarKeyPressed(evt);
            }
        });

        jtAutorizaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtAutorizaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtAutorizacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtAutorizaciones);

        btnAddAutorizado.setText("Añadir Registro");
        btnAddAutorizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAutorizadoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TABLA AUTORIZACIONES");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddAutorizado)
                .addGap(30, 30, 30))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddAutorizado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            System.out.println("PULSANDO ENTER");
            DefaultTableModel modelo = (DefaultTableModel) jtAutorizaciones.getModel();
            TableRowSorter<TableModel> trSorter = new TableRowSorter<>(modelo);

            jtAutorizaciones.setRowSorter(trSorter);

            if (txtBuscar.getText().length() == 0) {
                trSorter.setRowFilter(null);
            } else {
                trSorter.setRowFilter(RowFilter.regexFilter(txtBuscar.getText().trim()));
            }
        }
    }//GEN-LAST:event_txtBuscarKeyPressed

    private void jtAutorizacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtAutorizacionesMouseClicked
        if (evt.getClickCount() == 2) {
            try {
                System.out.println("DOBLE CLIC");

                // Obtener el valor de la columna 0 (ID Alumno)
                int idAlumno = Integer.parseInt(jtAutorizaciones.getValueAt(jtAutorizaciones.getSelectedRow(), 0).toString());

                // Obtener el valor de la columna 3 (ID Autorizado)
                int idAutorizado = Integer.parseInt(jtAutorizaciones.getValueAt(jtAutorizaciones.getSelectedRow(), 3).toString());

                // Obtener los objetos Alumno y Autorizado según los IDs
                AlumnoDaoImp alumnoDao = AlumnoDaoImp.getInstance();
                AutorizadoDaoImp autorizadoDao = AutorizadoDaoImp.getInstance();
                Alumno alumno = alumnoDao.getById(idAlumno);
                Autorizado autorizado = autorizadoDao.getById(idAutorizado);

                // Abrir formulario de frmAutorizaciones y pasar los objetos Alumno y Autorizado
                frmAutorizaciones autorizacionesForm = new frmAutorizaciones();
                autorizacionesForm.setAlumno(alumno);
                autorizacionesForm.miTablaInterna=this;
                autorizacionesForm.setAutorizado(autorizado);
                autorizacionesForm.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jtAutorizacionesMouseClicked

    private void btnAddAutorizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAutorizadoActionPerformed
        // TODO add your handling code here:
        frmAutorizaciones autorizacionesForm = new frmAutorizaciones();
        autorizacionesForm.miTablaInterna=this;
        autorizacionesForm.setVisible(true);
    }//GEN-LAST:event_btnAddAutorizadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTablaAutorizaciones().setVisible(true);
            }
        });
    }

    private void configTabla() {
        String col[] = {"ID Alumno", "DNI Alumno", "Nombre Alumno", "ID Autorizado", "DNI Autorizado", "Nombre Autorizado"};
        modelo = new DefaultTableModel(col, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        jtAutorizaciones.setModel(modelo);
    }

    public void cargaTabla() {
        DefaultTableModel modelo = (DefaultTableModel) jtAutorizaciones.getModel();
        AutorizacionesDaoImp autorizacionesDao = AutorizacionesDaoImp.getInstance();
        AlumnoDaoImp alumnoDao = AlumnoDaoImp.getInstance();
        AutorizadoDaoImp autorizadoDao = AutorizadoDaoImp.getInstance();

        try {
            modelo.setNumRows(0);
            for (Autorizaciones autorizacion : autorizacionesDao.getAll()) {
                Alumno alumno = alumnoDao.getById(autorizacion.getIdalumno());
                Autorizado autorizado = autorizadoDao.getById(autorizacion.getIdautorizado());

                Object[] fila = {
                    alumno.getId(),
                    alumno.getDni(),
                    alumno.getNombre(),
                    autorizado.getId(),
                    autorizado.getDni(),
                    autorizado.getNombre()
                };
                modelo.addRow(fila);
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmTablaAutorizaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAutorizado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtAutorizaciones;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
